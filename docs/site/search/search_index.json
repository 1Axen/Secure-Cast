{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#securecast","title":"SecureCast","text":"<p>SecureCast is the top-level interface for interacting with the system. It is returned by <code>require(SecureCast)</code>.</p>"},{"location":"#members","title":"Members","text":"<p>Utility  Snapshots</p> <p>The snapshots utility used by the simulation, you can use this to retrieve player positions back in time for lag compensation.</p> <p>Warning</p> <p>Snapshots can only be used on the server, calling any of the methods within the utility will throw an error when called from the client!</p>"},{"location":"#methods","title":"Methods","text":"<p>void  Initialize ( number? Threads )</p> <p>Initialize the simulation for the current context. Creates a dispatcher with the specified amount of threads (defaults to 32 if threads is not defined).</p> <p>Warning</p> <p>Initialize can only be called once per context, subsequent calls will result in an error.</p> <p>void  Cast ( Player Caster,      string Type,      Vector3 Origin Vector3 Direction number Timestamp PVInstance? PVInstance Modifier? Modifier )</p> <p>Casts a new projectile. A Modifier can be used to modify the behaviour of a projectile on a per cast basis. A PVInstance must exist on the client in order for the projectile to be rendered.</p> <p>Danger</p> <p>When using a Modifier make sure that all clients and the server use the same modifier, improper modifier usage can result in simulation desync.</p>"},{"location":"definitions/","title":"Definitions","text":""},{"location":"definitions/#definitions","title":"Definitions","text":"<p>This page contains all types defined and used by SecureCast.</p> <p>type  Modifier ( number Loss,      number Power,      number Angle,      number Gravity,      number Velocity,      number Lifetime,      BindableEvent? Output,      RaycastParams? RaycastFilter, )</p> <p>Modifiers are a powerful tool that allows you to define per cast functionality seperate from the base projectile definition.</p> Custom event handling<pre><code>local Bindable = Instance.new(\"BindableEvent\")\nBindable.Event:Connect(function(Type: string, Event: string, ...)\nif Event == \"OnDestroyed\" then\n--&gt; No need to keep a reference to the connection \n--&gt; since destroy will take care of it for us\nBindable:Destroy()\nelseif Event == \"OnImpact\" then\nelseif Event == \"OnIntersection\" then\nend\nend)\nlocal Modifier = {\nOutput = Bindable,\n}\nSecureCast.Cast(Player, \"Bullet\", Origin, Direction, os.clock() - Latency, nil, Modifier)\n</code></pre> <p>Danger</p> <p>When using Modifiers make sure that all clients and the server use the same modifier, improper modifier usage can result in simulation desync.</p> <p>type  Definition ( number Loss,      number Power,      number Angle,      number Gravity,      number Velocity,      number Lifetime,      BindableEvent? Output,      RaycastParams? RaycastFilter,      void OnImpact (          Player Caster,          Vector3 Direction,          Instance Instance,          Vector3 Normal,          Vector3 Position,          Enum.Material Material \u2003),      void OnDestroyed (          Player Caster,          Vector3 Position \u2003),      void OnIntersection (          Player Caster,          Vector3 Direction,          string Part,          Player Victim,          Vector3 Position \u2003), )</p> <p>This type represents the way that projectiles should be defined within the system. Refer to the template bullet included within the GitHub repository for an example.</p> <p>type  Record ( {CFrame} Parts,      Vector3 Position, )</p> <p>type  Snapshot ( number Time,      Voxels.Grid Grid,      {[Player]: Record} Records, )</p>"},{"location":"settings/","title":"Settings","text":""},{"location":"settings/#settings","title":"Settings","text":"<p>This page contains all settings used by SecureCast. These can be found in the Settings module under the SecureCast module.</p> <p>number  VoxelSize</p> <p>The size of each voxel in studs.</p> <p>Vector3  VoxelGridSize</p> <p>The size of the voxel grid in studs.</p> <p>Danger</p> <p>Be careful when editing this value, anything smaller than the playable area will result in players being missed by the server raycasts.</p> <p>number  SnapshotLifetime</p> <p>The lifetime of snapshots in seconds.</p> <p>Danger</p> <p>Be careful when editing this value, very small values will result in players with high ping not being able to land shots but high values may result in players being hit behind cover long after they have gone behind it.</p> <p>{[Enum.Material]: number}  SurfaceHardness</p> <p>An array of each materials hardness. The needed penetration power can be calculate with the following formula: <code>Power = SurfaceDepth * SurfaceHardness</code></p> <p>number  RicochetHardness</p> <p>The minimum surface hardness needed for a projectile to ricochet off of something. This is ignored when a projectile has a ricochet angle set to <code>math.pi * 2</code>.</p> <p>{string}  Parts</p> <p>An array containing the names of every hitbox in a players character, ordered from most to least damage.</p> <p>{Vector3}  PartsSizes</p> <p>An array containing the halved sizes of every hitbox in a players character, in the same order as the <code>Parts</code> array.</p> <p>Vector3  HitboxSize</p> <p>The maximum halved size of a players character, it needs to contain the character at it's maximum arm span.</p>"},{"location":"snapshots/","title":"Snapshots","text":""},{"location":"snapshots/#snapshots","title":"Snapshots","text":"<p>The snapshots utility is used by the simulation to take \"snapshots\" of player positions in the past for lag compensation.</p>"},{"location":"snapshots/#methods","title":"Methods","text":"<p>{[string]: CFrame}?  GetPlayerAtTime ( Player Player number Time )</p> <p>Returns an array containing the CFrame of each of the player's hitboxes in the past, returns nothing when no snapshots containing the player can be found.</p> <p>{[Player]: {[string]: CFrame}}  GetPlayersAtTime ( number Time )</p> <p>Returns an array containing the CFrame of each of the hitboxes of every player in the past.</p> <p>Snapshot?, Snapshot?, number?  GetSnapshotsAtTime ( number Time )</p> <p>Returns a tuple containing the previous snapshot, next snapshot and the fraction used for lerping between them, returns nothing if no snapshots can be found for the given time.</p> <p>void  CreatePlayersSnapshot ( number Time )</p> <p>Creates a snapshot of every players hitbox at the given time.</p> <p>Danger</p> <p>This method should not be called or it may result in undefined behaviour, this is already called by SecureCast internally.</p>"}]}